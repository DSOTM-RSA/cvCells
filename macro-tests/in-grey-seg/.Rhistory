geom_text(aes(label=paste0(drug_name,": ", freq), y=cum.freq), colour="grey20") +
scale_fill_manual(values=pal2) +
guides(fill=FALSE)
pal2
order(df_count,drug_class)
pal2-c
sort(df_count,drug_name)
sort(df_count)
sort(df_count$drug_class)
order(df_count,drug_class)
order(df_count,df$count$drug_class)
order(df_count$drug_class)
df_count[order(df_count$drug_class)]
df_count[order(df_count$drug_class),]
outerr<-df_count[order(df_count$drug_class),]
ggplot(data = outerr, aes(x=drug_class, y=freq, fill=drug_name) ) +
geom_bar(stat="identity", colour="black", lwd=0.2) +
geom_text(aes(label=paste0(drug_name,": ", freq), y=cum.freq), colour="grey20") +
scale_fill_manual(values=pal2) +
guides(fill=FALSE)
outerr
View(outerr)
ggplot(data = outerr, aes(x=drug_class, y=freq, fill=drug_name) ) +
geom_bar(stat="identity", colour="black", lwd=0.2) +
geom_text(aes(label=paste0(drug_name,": ", freq), y=cum.freq), colour="grey20") +
scale_fill_manual(pal2) +
guides(fill=FALSE)
ggplot(data = outerr, aes(x=drug_class, y=freq, fill=drug_name) ) +
geom_bar(stat="identity", colour="black", lwd=0.2) +
geom_text(aes(label=paste0(drug_name,": ", freq), y=cum.freq), colour="grey20") +
scale_fill_manual(values=pal2) +
guides(fill=FALSE)
ggplot(data = outerr, aes(x=drug_class, y=freq, fill=drug_name) ) +
geom_bar(stat="identity", colour="black", lwd=0.2) +
geom_text(aes(label=paste0(drug_name,": ", freq), y=cum.freq), colour="grey20") +
scale_fill_manual(values=pal2[order(df_count$drug_class)]) +
guides(fill=FALSE)
pal = mapply(function(x,y) brewer.pal(x,y), ncol, c("Set2","Set2","Set2","Set2"))
pal = unname(unlist(pal))
ggplot(data = df_count, aes(x=drug_class, y=freq, fill=drug_name) ) +
geom_bar(stat="identity", colour="black", lwd=0.2) +
geom_text(aes(label=paste0(drug_name,": ", freq), y=cum.freq), colour="grey20") +
scale_fill_manual(values=pal2[order(df_count$drug_class)]) +
guides(fill=FALSE)
ggplot(data = df_count, aes(x=drug_class, y=freq, fill=drug_name) ) +
geom_bar(stat="identity", colour="black", lwd=0.2) +
geom_text(aes(label=paste0(drug_name,": ", freq), y=cum.freq), colour="grey20") +
scale_fill_manual(values=pal[order(df_count$drug_class)]) +
guides(fill=FALSE)
ggplot(data = outerr, aes(x=drug_class, y=freq, fill=drug_name) ) +
geom_bar(stat="identity", colour="black", lwd=0.2) +
geom_text(aes(label=paste0(drug_name,": ", freq), y=cum.freq), colour="grey20") +
scale_fill_manual(values=pal[order(df_count$drug_class)]) +
guides(fill=FALSE)
ggplot(data = outerr, aes(x=drug_class, y=freq, fill=drug_name) ) +
geom_bar(stat="identity", colour="black", lwd=0.2) +
geom_text(aes(label=paste0(drug_name,": ", freq), y=cum.freq), colour="grey20") +
scale_fill_manual(values=pal[order(outerr$drug_class)]) +
guides(fill=FALSE)
ggplot(data = df_count, aes(x=drug_class, y=freq, fill=drug_name) ) +
geom_bar(stat="identity", colour="black", lwd=0.2) +
geom_text(aes(label=paste0(drug_name,": ", freq), y=cum.freq), colour="grey20") +
scale_fill_manual(values=pal[order(outerr$drug_class)]) +
guides(fill=FALSE)
ggplot(data = df_count, aes(x=drug_class, y=freq, fill=drug_name) ) +
geom_bar(stat="identity", colour="black", lwd=0.2) +
geom_text(aes(label=paste0(drug_name,": ", freq), y=cum.freq), colour="grey20") +
scale_fill_manual(values=pal) +
guides(fill=FALSE)
?scale_fill_manual
pal3<-pal[order(df_count$drug_class),]
pal3<-pal2[order(df_count$drug_class),]
df_count$other<-df_count$drug_name[order(df_count$drug_class),]
df_count$other<-df_count$[order(df_count$drug_class),]
other<-df_count$[order(df_count$drug_class),]
outerr<-df_count[order(df_count$drug_class),]
View(outerr)
outer<-pal2[order(df_count$drug_class),]
df_count$other<-pal2
outerr$other<-pal2
ggplot(data = outerr, aes(x=drug_class, y=freq, fill=drug_name) ) +
geom_bar(stat="identity", colour="black", lwd=0.2) +
geom_text(aes(label=paste0(drug_name,": ", freq), y=cum.freq), colour="grey20") +
scale_fill_manual(values=outerr$other) +
guides(fill=FALSE)
pal3 = mapply(function(x,y) brewer.pal(x,y), ncol, c("Set2","Set2","Set2","Set2"))
pal3 = unname(unlist(pal3))
pal3
ggplot(data = outerr, aes(x=drug_class, y=freq, fill=drug_name) ) +
geom_bar(stat="identity", colour="black", lwd=0.2) +
geom_text(aes(label=paste0(drug_name,": ", freq), y=cum.freq), colour="grey20") +
scale_fill_manual(values=outerr$other) +
guides(fill=FALSE)
pal3
pal2
ggplot(data = df_count, aes(x=drug_class, y=freq, fill=drug_name) ) +
geom_bar(stat="identity", colour="black", lwd=0.2) +
geom_text(aes(label=paste0(drug_name,": ", freq), y=cum.freq), colour="grey20") +
scale_fill_manual(values=outerr$other) +
guides(fill=FALSE)
pal.trial = mapply(function(x,y) brewer.pal(x,y), ncol, c("Set2","Set2","Set2","Set2"))
pal.trial[[2]] = pal.trial[[2]][1:2]  # We only need 2 colors but brewer.pal creates 3 minimum
pal.trial = unname(unlist(pal.trial))
pal.trial
df_count$colours<-pal.trial
View(df_count)
sorted<-pal.trial[order(df_count$drug_class),]
outerr$new<-pal.trial
ggplot(data = df_class, aes(x=drug_class, y=freq, fill=drug_name) ) +
geom_bar(stat="identity", colour="black", lwd=0.2) +
geom_text(aes(label=paste0(drug_name,": ", freq), y=cum.freq), colour="grey20") +
scale_fill_manual(values=outerr$new) +
guides(fill=FALSE)
ggplot(data = outerr, aes(x=drug_class, y=freq, fill=drug_name) ) +
geom_bar(stat="identity", colour="black", lwd=0.2) +
geom_text(aes(label=paste0(drug_name,": ", freq), y=cum.freq), colour="grey20") +
scale_fill_manual(values=outerr$new) +
guides(fill=FALSE)
ggplot(data = outerr, aes(x=drug_class, y=freq, fill=drug_name) ) +
geom_bar(stat="identity", colour="black", lwd=0.2) +
geom_text(aes(label=paste0(drug_name,": ", freq), y=cum.freq), colour="grey20") +
scale_fill(values=outerr$new) +
guides(fill=FALSE)
ggplot(data = df_class, aes(x=drug_class, y=freq, fill=drug_name) ) +
geom_bar(stat="identity", colour="black", lwd=0.2) +
geom_text(aes(label=paste0(drug_name,": ", freq), y=cum.freq), colour="grey20") +
scale_fill_manual(values=c(outerr$new)) +
guides(fill=FALSE)
ggplot(data = outerr, aes(x=drug_class, y=freq, fill=drug_name) ) +
geom_bar(stat="identity", colour="black", lwd=0.2) +
geom_text(aes(label=paste0(drug_name,": ", freq), y=cum.freq), colour="grey20") +
scale_fill(values=c(outerr$new)) +
guides(fill=FALSE)
ggplot(data = outerr, aes(x=drug_class, y=freq, fill=drug_name) ) +
geom_bar(stat="identity", colour="black", lwd=0.2) +
geom_text(aes(label=paste0(drug_name,": ", freq), y=cum.freq), colour="grey20") +
scale_fill_manual(values=c(outerr$new)) +
guides(fill=FALSE)
ggplot(data = outerr, aes(x=drug_class, y=freq, fill=drug_name) ) +
geom_bar(stat="identity", colour="black", lwd=0.2) +
geom_text(aes(label=paste0(drug_name,": ", freq), y=cum.freq), colour="grey20") +
scale_fill_manual(values=c(outerr$other)) +
guides(fill=FALSE)
ggplot(data = outerr, aes(x=drug_class, y=freq, fill=drug_name) ) +
geom_bar(stat="identity", colour="black", lwd=0.2) +
geom_text(aes(label=paste0(drug_name,": ", freq), y=cum.freq), colour="grey20") +
scale_fill_manual(values=pal.trial) +
guides(fill=FALSE)
ggplot(data = outerr, aes(x=drug_class, y=freq, fill=drug_name) ) +
geom_bar(stat="identity", colour="black", lwd=0.2) +
geom_text(aes(label=paste0(drug_name,": ", freq), y=cum.freq), colour="grey20") +
scale_fill_manual(values=outerr$new) +
guides(fill=FALSE)
ggplot(data = outerr, aes(x=drug_class, y=freq, fill=drug_name) ) +
geom_bar(stat="identity", colour="black", lwd=0.2) +
geom_text(aes(label=paste0(drug_name,": ", freq), y=cum.freq), colour="grey20") +
scale_fill_manual(values=outerr$other) +
guides(fill=FALSE)
ggplot(data = outerr, aes(x=drug_class, y=freq, fill=colours) ) +
geom_bar(stat="identity", colour="black", lwd=0.2) +
geom_text(aes(label=paste0(drug_name,": ", freq), y=cum.freq), colour="grey20") +
scale_fill_manual(values=outerr$other) +
guides(fill=FALSE)
ggplot(data = outerr, aes(x=drug_class, y=freq, fill=cum.freq) ) +
geom_bar(stat="identity", colour="black", lwd=0.2) +
geom_text(aes(label=paste0(drug_name,": ", freq), y=cum.freq), colour="grey20") +
scale_fill_manual(values=outerr$other) +
guides(fill=FALSE)
ggplot(data = outerr, aes(x=drug_class, y=freq, fill=drug_name) ) +
geom_bar(stat="identity", colour="black", lwd=0.2) +
geom_text(aes(label=paste0(drug_name,": ", freq), y=cum.freq), colour="grey20") +
scale_fill_manual(values=outerr$other) +
guides(fill=FALSE)
outerr$othername <- outerr$drug_name
outerr$othername <- df_count$drug_name
ggplot(data = outerr, aes(x=drug_class, y=freq, fill=othername) ) +
geom_bar(stat="identity", colour="black", lwd=0.2) +
geom_text(aes(label=paste0(drug_name,": ", freq), y=cum.freq), colour="grey20") +
scale_fill_manual(values=outerr$other) +
guides(fill=FALSE)
ggplot(data = outerr, aes(x=drug_class, y=freq, fill=othername) ) +
geom_bar(stat="identity", colour="black", lwd=0.2) +
geom_text(aes(label=paste0(drug_name,": ", freq), y=cum.freq), colour="grey20") +
scale_fill_manual(values=outerr$new) +
guides(fill=FALSE)
outerr.again<-df_count[order(df_count$drug_class),]
View(outerr.again)
pal.test = mapply(function(x,y) brewer.pal(x,y), ncol, c("Set2","Set2","Set2","Set2"))
pal.test[[2]] = pal.test[[2]][1:2]  # We only need 2 colors but brewer.pal creates 3 minimum
pal.test = unname(unlist(pal.test))
df_count_sorted <- df_count[order(df_count$drug_class),]
df_count_sorted$labOrder <- df_count$drug_name
df_count$colours<-pal.test
View(df_count_sorted)
ggplot(data = outerr, aes(x=drug_class, y=freq, fill=othername) ) +
geom_bar(stat="identity", colour="black", lwd=0.2) +
geom_text(aes(label=paste0(drug_name,": ", freq), y=cum.freq), colour="grey20") +
scale_fill_manual(values=outerr$new) +
guides(fill=FALSE)
df_count_sorted$new<-pal.trial
ggplot(data = df_count_sorted, aes(x=drug_class, y=freq, fill=labOrder) ) +
geom_bar(stat="identity", colour="black", lwd=0.2) +
geom_text(aes(label=paste0(drug_name,": ", freq), y=cum.freq), colour="grey20") +
scale_fill_manual(values=$df_count_sorted$new) +
guides(fill=FALSE)
ggplot(data = df_count_sorted, aes(x=drug_class, y=freq, fill=labOrder) ) +
geom_bar(stat="identity", colour="black", lwd=0.2) +
geom_text(aes(label=paste0(drug_name,": ", freq), y=cum.freq), colour="grey20") +
scale_fill_manual(values=$df_count_sorted$new) +
guides(fill=FALSE)
ggplot(data = df_count_sorted, aes(x=drug_class, y=freq, fill=labOrder) ) +
geom_bar(stat="identity", colour="black", lwd=0.2) +
geom_text(aes(label=paste0(drug_name,": ", freq), y=cum.freq), colour="grey20") +
scale_fill_manual(values=$df_count_sorted$new) +
guides(fill=FALSE))
ggplot(data = df_count, aes(x=drug_class, y=freq, fill=df_count_sorted$labOrder) ) +
geom_bar(stat="identity", colour="black", lwd=0.2) +
geom_text(aes(label=paste0(drug_name,": ", freq), y=cum.freq), colour="grey20") +
scale_fill_manual(values=df_count_sorted$new) +
guides(fill=FALSE)
ggplot(data = df_count, aes(x=drug_class, y=freq, fill=labOrder) ) +
geom_bar(stat="identity", colour="black", lwd=0.2) +
geom_text(aes(label=paste0(drug_name,": ", freq), y=cum.freq), colour="grey20") +
scale_fill_manual(values=df_count_sorted$new) +
guides(fill=FALSE)
ggplot(data = df_count_sorted, aes(x=drug_class, y=freq, fill=labOrder) ) +
geom_bar(stat="identity", colour="black", lwd=0.2) +
geom_text(aes(label=paste0(drug_name,": ", freq), y=cum.freq), colour="grey20") +
scale_fill_manual(values=df_count_sorted$new) +
guides(fill=FALSE)
pal.test = mapply(function(x,y) brewer.pal(x,y), ncol, c("Set2","Set2","Set2","Set2"))
pal.test[[2]] = pal.test[[2]][1:2]
pal.test = unname(unlist(pal.test))
pal.test
df_sorted <- df_count[order(df_count$drug_class),]
View(df_sorted)
df_sorted$labOrder <- df_count$drug_name
df_sorted$colours<-pal.test
ggplot(data = df_sorted, aes(x=drug_class, y=freq, fill=labOrder) ) +
geom_bar(stat="identity", colour="black", lwd=0.2) +
geom_text(aes(label=paste0(drug_name,": ", freq), y=cum.freq), colour="grey20") +
scale_fill_manual(values=df_count_sorted$colours) +
guides(fill=FALSE)
ggplot(data = df_sorted, aes(x=drug_class, y=freq, fill=labOrder) ) +
geom_bar(stat="identity", colour="black", lwd=0.2) +
geom_text(aes(label=paste0(drug_name,": ", freq), y=cum.freq), colour="grey20") +
scale_fill_manual(values=df_sorted$colours) +
guides(fill=FALSE)
repeating.pal = mapply(function(x,y) brewer.pal(x,y), ncol,        c("Set2","Set2","Set2","Set2"))
Alter the plot routine, with `fill` = labOrder.
repeating.pal[[2]] = repeating.pal[[2]][1:2]  # We only need 2 colors but brewer.pal creates 3 minimum
repeating.pal = unname(unlist(repeating.pal))
df_count_sorted <- df_count[order(df_count$drug_class),]
df_count_sorted$labOrder <- df_count$drug_name
df_count$colours<-repeating.pal
ggplot(data = df_sorted, aes(x=drug_class, y=freq, fill=labOrder) ) +
geom_bar(stat="identity", colour="black", lwd=0.2) +
geom_text(aes(label=paste0(drug_name,": ", freq), y=cum.freq),     colour="grey20") +
scale_fill_manual(values=df_sorted$colours) +
guides(fill=FALSE)
install.packages(c("htmltools", "shinyjs"))
install.packages(c("BiodiversityR", "car", "effects", "Rcpp", "readxl", "shiny", "shinyjs", "sjPlot"))
setwd("~/Documents/GitArchive/Studio/Shiny Apps/shine2")
shiny::runApp()
install.packages(c("Hmisc", "lubridate", "Rcmdr", "RcmdrMisc", "sjmisc"))
install.packages("ReacTran")
period_onset <- as.Date(c("2014-07-02", "2014-08-02", "2014-08-29", "2014-09-25",
"2014-10-24", "2014-11-20", "2014-12-22", "2015-01-19"))
days_between_periods <- as.numeric(diff(period_onset))
calc_log_like <- function(days_since_last_period, days_between_periods,
mean_period, sd_period, next_period,
is_fertile, is_pregnant) {
n_non_pregnant_periods <- length(days_between_periods)
log_like <- 0
if(n_non_pregnant_periods > 0) {
log_like <- log_like + sum( dnorm(days_between_periods, mean_period, sd_period, log = TRUE) )
}
log_like <- log_like + log( (1 - 0.19 * is_fertile)^n_non_pregnant_periods )
if(!is_pregnant && next_period < days_since_last_period) {
log_like <- -Inf
}
log_like
}
prop_not_preg_12_cycles <- c( "19-26 years" = 0.08,
"27-34 years" = 0.13,
"35-39 years" = 0.18)
1 - (prop_not_preg_12_cycles - 0.05)^(1/12)
sample_from_prior <- function(n) {
prior <- data.frame(mean_period = rnorm(n, 27.7, 2.4),
sd_period   = abs(rnorm(n, 0, 2.05)),
is_fertile  = rbinom(n, 1, 0.95))
prior$is_pregnant <- rbinom(n, 1, 0.19 * prior$is_fertile)
prior$next_period <- rnorm(n, prior$mean_period, prior$sd_period)
prior$next_period[prior$is_pregnant == 1] <- NA
prior
}
sample_from_prior(n = 4)
sample_from_prior(5)
sample_from_posterior <- function(days_since_last_period, days_between_periods, n_samples) {
prior <- sample_from_prior(n_samples)
log_like <- sapply(1:n_samples, function(i) {
calc_log_like(days_since_last_period, days_between_periods,
prior$mean_period[i], prior$sd_period[i], prior$next_period[i],
prior$is_fertile[i], prior$is_pregnant[i])
})
posterior <- prior[ sample(n_samples, replace = TRUE, prob = exp(log_like)), ]
posterior
}
# THE RESULTS
post <- sample_from_posterior(33, days_between_periods, n_samples = 100)
head(post)
mean(post$is_fertile)
mean(post$is_pregnant)
post <- sample_from_posterior(34, days_between_periods, n_samples = 100000)
mean(post$is_pregnant)
post <- sample_from_posterior(35, days_between_periods, n_samples = 100000)
mean(post$is_pregnant)
install.packages(c("abind", "caret", "curl", "dendextend", "devtools", "dplyr", "ggvis", "haven", "httr", "jsonlite", "lazyeval", "mime", "multcomp", "oce", "openssl", "plotrix", "plyr", "psych", "purrr", "quantreg", "Rcmdr", "Rcpp", "rmarkdown", "rstudioapi", "sjPlot", "stringi", "tidyr", "vegan", "wakefield", "withr"))
install.packages(c("car", "caret", "curl", "DBI", "digest", "htmlwidgets", "knitr", "RcmdrMisc", "readr", "sjPlot", "sjstats"))
source("https://bioconductor.org/biocLite.R")
biocLite("EBImage")
biocLite()
biocLite("EBImage")
install.packages("fftwtools")
install.packages("rJava")
install.packages("rJava")
install.packages("rJava")
install.packages("rJava")
install.packages("rJava")
biocLite("EBImage")
library(BiocInstaller)
biocLite("EBImage")
biocLite("EBImage")
biocLite("EBImage")
library(EBImage)
y = readImage(system.file("images", "nuclei.tif", package="EBImage"))[,,1]
x = thresh(y, 10, 10, 0.05)
x = opening(x, makeBrush(5, shape='disc'))
x = bwlabel(x)
display(y, title="Cell nuclei")
display(y, title="Cell nuclei")
fts = computeFeatures.shape(x)
fts
ft = computeFeatures(x, y, xname="nucleus")
cat("median features are:\n")
apply(ft, 2, median)
ftp = computeFeatures(x, y, properties=TRUE, xname="nucleus")
ftp = computeFeatures(x, y, properties=TRUE, xname="nucleus")
ftp
fe<-computeFeatures.haralick(x)
fe<-computeFeatures.haralick(x,y)
View(fe)
display(y, title="Cell nuclei")
display(x, title="Cell nuclei")
str(x)
f = system.file("images", "sample-color.png", package="EBImage")
x = readImage(f)
display(x)
y = readImage(system.file("images", "nuclei.tif", package="EBImage"))
display(y)
View(fts)
y = readImage(system.file("images", "nuclei.tif", package="EBImage"))
display(y)
ft = computeFeatures(x, y, xname="nucleus")
cat("median features are:\n")
ft = computeFeatures(x, y, xname="nucleus")
cat("median features are:\n")
y = readImage(system.file("images", "nuclei.tif", package="EBImage"))[,,1]
x = thresh(y, 10, 10, 0.05)
x = opening(x, makeBrush(5, shape='disc'))
x = bwlabel(x)
display(y, title="Cell nuclei")
display(x, title="Segmented nuclei")
fts = computeFeatures.shape(x)
fts
## compute features
ft = computeFeatures(x, y, xname="nucleus")
View(ft)
cat("median features are:\n")
apply(ft, 2, median)
library(EBImage)
setwd("~/Documents/GitArchive/cvCells/macro-tests")
bspp.grey <- readImage("01-g-bspp.tif")
setwd("~/Documents/GitArchive/cvCells/macro-tests/in-grey-seg")
bspp.grey <- readImage("01-g-bspp.tif")
bspp.seg <- readImage("01-s-bspp.tif")
bspp.seg.lab = bwlabel(bspp.seg)
bspp.fts = computeFeatures.shape(bspp.seg.lab)
View(bspp.fts)
bspp.fts = bspp.fts[,1>=10000]
View(bspp.fts)
bspp.fts = computeFeatures.shape(bspp.seg.lab)
bspp.fts = bspp.fts[bspp.fts$s.area>=10000],)
bspp.fts = bspp.fts[bspp.fts$s.area>=10000,]
bspp.fts = computeFeatures.shape(bspp.seg.lab)
bspp.fts = bspp.fts[bspp.fts$s.area>=10000,]
bspp.fts = bspp.fts[bspp.fts[,1]>=10000,]
bspp.fts = computeFeatures.shape(bspp.seg.lab)
bspp.fts2 = bspp.fts[bspp.fts[,1]>=10000,]
bspp.fts = computeFeatures.shape(bspp.seg.lab)
bspp.fts.trim = bspp.fts[bspp.fts[,1]>=10000,]
View(bspp.fts)
bspp.fts = computeFeatures.shape(bspp.seg.lab,bspp.grey)
bspp.fts = computeFeatures(bspp.seg.lab,bspp.grey)
bspp.fts.trim = bspp.fts[bspp.fts[,6]>=10000,]
fthar<-computeFeatures.haralickbspp.seg.lab,bspp.grey)
fthar<-computeFeatures.haralick(bspp.seg.lab,bspp.grey)
bspp.har<-computeFeatures.haralick(bspp.seg.lab,bspp.grey)
ind = which(bspp.fts[bspp.fts[,6]>=10000,])
?which
ind = which(bspp.fts,bspp.fts[bspp.fts[,6]>=10000,])
ind = which(bspp.fts,[,6]>=10000,])
ind = which(bspp.fts,[,6]>=10000)
ind = which(bspp.fts,[,6]>=10000)
ind = which(bspp.fts[,6],>=10000)
ind = which(bspp.fts,>=10000)
ind = which(bspp.fts[,6]>=10000)
bspp.har.trim = bspp.har[2,]
View(bspp.har)
obj<-cbind(bspp.fts.trim,bspp.har.trim)
obj<-rbind(bspp.fts.trim,bspp.har.trim)
View(obj)
obj<-cbind(bspp.fts.trim,bspp.har.trim)
obj<-c(bspp.fts.trim,bspp.har.trim)
obj
iacu.grey <- readImage("03-g-iacu.tif")
iacu.seg <- readImage("01-s-iacu.tif")
iacu.seg.lab = bwlabel(iacu.seg)
iacu.fts = computeFeatures(iacu.seg.lab,iacu.grey)
iacu.fts = computeFeatures(iacu.seg.lab,iacu.grey)
iacu.fts = computeFeatures(iacu.seg.lab,iacu.grey,na.rm=FALSE)
display(iacu.grey, title='Embryos Grey')
display(iacu.seg, title='Embryos Grey')
display(iacu.seg.lab, title='Embryos Grey')
iacu.seg.lab
bspp.seg.lab
bspp.seg.lab$.Data
bspp.seg.lab[1]
bspp.seg.lab[2]
bspp.seg.lab[,2]
bspp.seg.lab[,1]
bspp.seg.lab[1,]
iacu.grey <- readImage("03-g-iacu.tif")
iacu.seg <- readImage("03-s-iacu.tif")
iacu.seg.lab = bwlabel(iacu.seg)
iacu.fts = computeFeatures(iacu.seg.lab,iacu.grey,na.rm=FALSE)
View(iacu.fts)
ind = which(iacu.fts[,6]>=10000)
iacu.fts.trim = iacu.fts[iacu.fts[,6]>=10000,]
iacu.har<-computeFeatures.haralick(iacu.seg.lab,iacu.grey)
iacu.har.trim = iacu.har[2,]
obj2<-c(iacu.fts.trim,iacu.har.trim)
obj[1]
obj[2]
plot(obj1[1],obj2[1])
plot(obj[1],obj2[1])
plot(obj[10],obj2[10])
plot(obj[11],obj2[11])
plot(obj,obj2)
corr(obj,obj2)
cor(obj,obj2)
plot(bspp.har.trim,iacu.har.trim)
plot(bspp.har.trim[1],iacu.har.trim[1])
plot(bspp.har.trim[2],iacu.har.trim[2])
plot(bspp.har.trim[3],iacu.har.trim[3])
plot(bspp.har.trim[4],iacu.har.trim[4])
plot(bspp.har.trim[5],iacu.har.trim[5])
plot(bspp.har.trim[6],iacu.har.trim[6])
plot(bspp.har.trim[7],iacu.har.trim[7])
View(iacu.har)
View(bspp.har)
ind = which(iacu.fts[,6]>=10000)
iacu.fts.trim = iacu.fts[iacu.fts[,6]>=10000,]
bspp.fts = computeFeatures(bspp.seg.lab,bspp.grey)
ind = which(bspp.fts[,6]>=10000)
bspp.fts.trim = bspp.fts[,ind]
View(bspp.fts)
bspp.har<-computeFeatures.haralick(bspp.seg.lab,bspp.grey)
View(bspp.har)
bspp.fts = computeFeatures(bspp.seg.lab,bspp.grey)
ind = which(bspp.fts[,6]>=10000)
bspp.fts.trim = bspp.fts[ind,]
bspp.fts.trim
bspp.har<-computeFeatures.haralick(bspp.seg.lab,bspp.grey)
bspp.har.trim = bspp.har[ind,]
obj<-c(bspp.fts.trim,bspp.har.trim)
iacu.fts = computeFeatures(iacu.seg.lab,iacu.grey)
ind = which(iacu.fts[,6]>=10000)
iacu.fts.trim = iacu.fts[ind,]
iacu.har<-computeFeatures.haralick(iacu.seg.lab,iacu.grey)
iacu.har.trim = iacu.har[ind,]
obj2<-c(iacu.fts.trim,iacu.har.trim)
obj1<-c(bspp.fts.trim,bspp.har.trim)
plot(obj1,obj2)
plot(obj1[1],obj2[1])
plot(obj1[4],obj2[4])
plot(obj1[5],obj2[5])
plot(obj1[6],obj2[6])
plot(obj1[7],obj2[7])
plot(obj1[8],obj2[8])
plot(obj1[9],obj2[9])
plot(obj1[10],obj2[10])
plot(obj1[25],obj2[25])
plot(obj1[26],obj2[26])
plot(obj1[27],obj2[27])
plot(obj1[28],obj2[28])
plot(obj1[29],obj2[29])
plot(obj1[30],obj2[30])
plot(obj1[31],obj2[31])
plot(obj1[32],obj2[32])
plot(obj1[33],obj2[33])
plot(obj1[34],obj2[34])
